// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: notification/v1/notification.proto

package notificationv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 发送渠道
// v1
//
//	|-- sms   - 短信
//	|-- email - 邮件
type Channel int32

const (
	Channel_CHANNEL_UNSPECIFIED Channel = 0
	Channel_SMS                 Channel = 1
	Channel_EMAIL               Channel = 2
)

// Enum value maps for Channel.
var (
	Channel_name = map[int32]string{
		0: "CHANNEL_UNSPECIFIED",
		1: "SMS",
		2: "EMAIL",
	}
	Channel_value = map[string]int32{
		"CHANNEL_UNSPECIFIED": 0,
		"SMS":                 1,
		"EMAIL":               2,
	}
)

func (x Channel) Enum() *Channel {
	p := new(Channel)
	*p = x
	return p
}

func (x Channel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Channel) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[0].Descriptor()
}

func (Channel) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[0]
}

func (x Channel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Channel.Descriptor instead.
func (Channel) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

// 发送状态
// v1
//
//	|-- PREPARE  - 准备中
//	|-- CANCELED - 已取消
//	|-- PENDING  - 挂起
//	|-- SUCCESS  - 成功
//	|-- FAILURE  - 失败
type SendStatus int32

const (
	SendStatus_STATUS_UNSPECIFIED SendStatus = 0
	SendStatus_PREPARE            SendStatus = 1
	SendStatus_CANCELED           SendStatus = 2
	SendStatus_PENDING            SendStatus = 3
	SendStatus_SUCCESS            SendStatus = 4
	SendStatus_FAILURE            SendStatus = 5
)

// Enum value maps for SendStatus.
var (
	SendStatus_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PREPARE",
		2: "CANCELED",
		3: "PENDING",
		4: "SUCCESS",
		5: "FAILURE",
	}
	SendStatus_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PREPARE":            1,
		"CANCELED":           2,
		"PENDING":            3,
		"SUCCESS":            4,
		"FAILURE":            5,
	}
)

func (x SendStatus) Enum() *SendStatus {
	p := new(SendStatus)
	*p = x
	return p
}

func (x SendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[1].Descriptor()
}

func (SendStatus) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[1]
}

func (x SendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendStatus.Descriptor instead.
func (SendStatus) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

// 错误码
type ErrCode int32

const (
	ErrCode_ERR_UNSPECIFIED            ErrCode = 0
	ErrCode_INVALID_PARAM              ErrCode = 1
	ErrCode_RATE_LIMITED               ErrCode = 2
	ErrCode_NO_AVAILABLE_CHANNEL       ErrCode = 3
	ErrCode_NO_AVAILABLE_PROVIDER      ErrCode = 4
	ErrCode_CHANNEL_NOT_FOUND          ErrCode = 5
	ErrCode_PROVIDER_NOT_FOUND         ErrCode = 6
	ErrCode_TEMPLATE_NOT_FOUND         ErrCode = 7
	ErrCode_BIZ_ID_NOT_FOUND           ErrCode = 8
	ErrCode_CONFIG_NOT_FOUND           ErrCode = 9
	ErrCode_QUOTA_CONFIG_NOT_FOUND     ErrCode = 10
	ErrCode_QUOTA_RECORD_NOT_FOUND     ErrCode = 11
	ErrCode_NOTIFICATION_NOT_FOUND     ErrCode = 12
	ErrCode_CREATE_NOTIFICATION_FAILED ErrCode = 13
	ErrCode_SEND_NOTIFICATION_FAILED   ErrCode = 14
	ErrCode_QUOTA_NOT_ENOUGH           ErrCode = 15
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:  "ERR_UNSPECIFIED",
		1:  "INVALID_PARAM",
		2:  "RATE_LIMITED",
		3:  "NO_AVAILABLE_CHANNEL",
		4:  "NO_AVAILABLE_PROVIDER",
		5:  "CHANNEL_NOT_FOUND",
		6:  "PROVIDER_NOT_FOUND",
		7:  "TEMPLATE_NOT_FOUND",
		8:  "BIZ_ID_NOT_FOUND",
		9:  "CONFIG_NOT_FOUND",
		10: "QUOTA_CONFIG_NOT_FOUND",
		11: "QUOTA_RECORD_NOT_FOUND",
		12: "NOTIFICATION_NOT_FOUND",
		13: "CREATE_NOTIFICATION_FAILED",
		14: "SEND_NOTIFICATION_FAILED",
		15: "QUOTA_NOT_ENOUGH",
	}
	ErrCode_value = map[string]int32{
		"ERR_UNSPECIFIED":            0,
		"INVALID_PARAM":              1,
		"RATE_LIMITED":               2,
		"NO_AVAILABLE_CHANNEL":       3,
		"NO_AVAILABLE_PROVIDER":      4,
		"CHANNEL_NOT_FOUND":          5,
		"PROVIDER_NOT_FOUND":         6,
		"TEMPLATE_NOT_FOUND":         7,
		"BIZ_ID_NOT_FOUND":           8,
		"CONFIG_NOT_FOUND":           9,
		"QUOTA_CONFIG_NOT_FOUND":     10,
		"QUOTA_RECORD_NOT_FOUND":     11,
		"NOTIFICATION_NOT_FOUND":     12,
		"CREATE_NOTIFICATION_FAILED": 13,
		"SEND_NOTIFICATION_FAILED":   14,
		"QUOTA_NOT_ENOUGH":           15,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[2].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[2]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

// 发送策略
type SendStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to StrategyType:
	//
	//	*SendStrategy_Immediate
	//	*SendStrategy_Delayed
	//	*SendStrategy_Scheduled
	//	*SendStrategy_TimeWindow
	//	*SendStrategy_Deadline
	StrategyType  isSendStrategy_StrategyType `protobuf_oneof:"strategy_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendStrategy) Reset() {
	*x = SendStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy) ProtoMessage() {}

func (x *SendStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *SendStrategy) GetStrategyType() isSendStrategy_StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return nil
}

func (x *SendStrategy) GetImmediate() *ImmediatelyStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Immediate); ok {
			return x.Immediate
		}
	}
	return nil
}

func (x *SendStrategy) GetDelayed() *DelayedStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Delayed); ok {
			return x.Delayed
		}
	}
	return nil
}

func (x *SendStrategy) GetScheduled() *ScheduledStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Scheduled); ok {
			return x.Scheduled
		}
	}
	return nil
}

func (x *SendStrategy) GetTimeWindow() *TimeWindowStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_TimeWindow); ok {
			return x.TimeWindow
		}
	}
	return nil
}

func (x *SendStrategy) GetDeadline() *DeadlineStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Deadline); ok {
			return x.Deadline
		}
	}
	return nil
}

type isSendStrategy_StrategyType interface {
	isSendStrategy_StrategyType()
}

type SendStrategy_Immediate struct {
	Immediate *ImmediatelyStrategy `protobuf:"bytes,1,opt,name=immediate,proto3,oneof"`
}

type SendStrategy_Delayed struct {
	Delayed *DelayedStrategy `protobuf:"bytes,2,opt,name=delayed,proto3,oneof"`
}

type SendStrategy_Scheduled struct {
	Scheduled *ScheduledStrategy `protobuf:"bytes,3,opt,name=scheduled,proto3,oneof"`
}

type SendStrategy_TimeWindow struct {
	TimeWindow *TimeWindowStrategy `protobuf:"bytes,4,opt,name=time_window,json=timeWindow,proto3,oneof"`
}

type SendStrategy_Deadline struct {
	Deadline *DeadlineStrategy `protobuf:"bytes,5,opt,name=deadline,proto3,oneof"`
}

func (*SendStrategy_Immediate) isSendStrategy_StrategyType() {}

func (*SendStrategy_Delayed) isSendStrategy_StrategyType() {}

func (*SendStrategy_Scheduled) isSendStrategy_StrategyType() {}

func (*SendStrategy_TimeWindow) isSendStrategy_StrategyType() {}

func (*SendStrategy_Deadline) isSendStrategy_StrategyType() {}

// 发送策略 - 立即发送
type ImmediatelyStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImmediatelyStrategy) Reset() {
	*x = ImmediatelyStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImmediatelyStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmediatelyStrategy) ProtoMessage() {}

func (x *ImmediatelyStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmediatelyStrategy.ProtoReflect.Descriptor instead.
func (*ImmediatelyStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

// 发送策略 - 延迟发送
type DelayedStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DelaySeconds  int64                  `protobuf:"varint,1,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelayedStrategy) Reset() {
	*x = DelayedStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelayedStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayedStrategy) ProtoMessage() {}

func (x *DelayedStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayedStrategy.ProtoReflect.Descriptor instead.
func (*DelayedStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *DelayedStrategy) GetDelaySeconds() int64 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

// 发送策略 - 调度发送
type ScheduledStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SendTime      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduledStrategy) Reset() {
	*x = ScheduledStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledStrategy) ProtoMessage() {}

func (x *ScheduledStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledStrategy.ProtoReflect.Descriptor instead.
func (*ScheduledStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *ScheduledStrategy) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

// 发送策略 - 时间窗口内发送
type TimeWindowStrategy struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StartTimeMillis int64                  `protobuf:"varint,1,opt,name=start_time_millis,json=startTimeMillis,proto3" json:"start_time_millis,omitempty"`
	EndTimeMillis   int64                  `protobuf:"varint,2,opt,name=end_time_millis,json=endTimeMillis,proto3" json:"end_time_millis,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TimeWindowStrategy) Reset() {
	*x = TimeWindowStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeWindowStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindowStrategy) ProtoMessage() {}

func (x *TimeWindowStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindowStrategy.ProtoReflect.Descriptor instead.
func (*TimeWindowStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *TimeWindowStrategy) GetStartTimeMillis() int64 {
	if x != nil {
		return x.StartTimeMillis
	}
	return 0
}

func (x *TimeWindowStrategy) GetEndTimeMillis() int64 {
	if x != nil {
		return x.EndTimeMillis
	}
	return 0
}

// 发送策略 - 截止时间前发送
type DeadlineStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=deadline,proto3" json:"deadline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeadlineStrategy) Reset() {
	*x = DeadlineStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeadlineStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadlineStrategy) ProtoMessage() {}

func (x *DeadlineStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadlineStrategy.ProtoReflect.Descriptor instead.
func (*DeadlineStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *DeadlineStrategy) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

// 消息
type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizCode       string                 `protobuf:"bytes,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Receivers     []string               `protobuf:"bytes,2,rep,name=receivers,proto3" json:"receivers,omitempty"`
	Channel       Channel                `protobuf:"varint,3,opt,name=channel,proto3,enum=notification.v1.Channel" json:"channel,omitempty"`
	TplId         string                 `protobuf:"bytes,4,opt,name=tpl_id,json=tplId,proto3" json:"tpl_id,omitempty"`
	TplParams     map[string]string      `protobuf:"bytes,5,rep,name=tpl_params,json=tplParams,proto3" json:"tpl_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Strategy      *SendStrategy          `protobuf:"bytes,6,opt,name=strategy,proto3" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *Notification) GetBizCode() string {
	if x != nil {
		return x.BizCode
	}
	return ""
}

func (x *Notification) GetReceivers() []string {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *Notification) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_CHANNEL_UNSPECIFIED
}

func (x *Notification) GetTplId() string {
	if x != nil {
		return x.TplId
	}
	return ""
}

func (x *Notification) GetTplParams() map[string]string {
	if x != nil {
		return x.TplParams
	}
	return nil
}

func (x *Notification) GetStrategy() *SendStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

// 发送结果，包含消息 id 以及发送状态和错误信息
type SendResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId uint64                 `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	Status         SendStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=notification.v1.SendStatus" json:"status,omitempty"`
	ErrCode        ErrCode                `protobuf:"varint,3,opt,name=err_code,json=errCode,proto3,enum=notification.v1.ErrCode" json:"err_code,omitempty"`
	ErrMsg         string                 `protobuf:"bytes,4,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendResult) Reset() {
	*x = SendResult{}
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResult) ProtoMessage() {}

func (x *SendResult) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResult.ProtoReflect.Descriptor instead.
func (*SendResult) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *SendResult) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *SendResult) GetStatus() SendStatus {
	if x != nil {
		return x.Status
	}
	return SendStatus_STATUS_UNSPECIFIED
}

func (x *SendResult) GetErrCode() ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return ErrCode_ERR_UNSPECIFIED
}

func (x *SendResult) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// 单条消息发送请求
type SendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *SendRequest) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 单条消息发送响应
type SendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *SendResult            `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *SendResponse) GetResult() *SendResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 单条消息异步发送请求
type AsyncSendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncSendRequest) Reset() {
	*x = AsyncSendRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncSendRequest) ProtoMessage() {}

func (x *AsyncSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncSendRequest.ProtoReflect.Descriptor instead.
func (*AsyncSendRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{10}
}

func (x *AsyncSendRequest) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 单条消息异步发送响应
type AsyncSendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *SendResult            `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncSendResponse) Reset() {
	*x = AsyncSendResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncSendResponse) ProtoMessage() {}

func (x *AsyncSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncSendResponse.ProtoReflect.Descriptor instead.
func (*AsyncSendResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{11}
}

func (x *AsyncSendResponse) GetResult() *SendResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 批量消息发送请求
type BatchSendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendRequest) Reset() {
	*x = BatchSendRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendRequest) ProtoMessage() {}

func (x *BatchSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendRequest.ProtoReflect.Descriptor instead.
func (*BatchSendRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{12}
}

func (x *BatchSendRequest) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// 批量消息发送响应
type BatchSendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SendResult          `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCnt      int32                  `protobuf:"varint,2,opt,name=total_cnt,json=totalCnt,proto3" json:"total_cnt,omitempty"`
	SuccessCnt    int32                  `protobuf:"varint,3,opt,name=success_cnt,json=successCnt,proto3" json:"success_cnt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendResponse) Reset() {
	*x = BatchSendResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendResponse) ProtoMessage() {}

func (x *BatchSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendResponse.ProtoReflect.Descriptor instead.
func (*BatchSendResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{13}
}

func (x *BatchSendResponse) GetResults() []*SendResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchSendResponse) GetTotalCnt() int32 {
	if x != nil {
		return x.TotalCnt
	}
	return 0
}

func (x *BatchSendResponse) GetSuccessCnt() int32 {
	if x != nil {
		return x.SuccessCnt
	}
	return 0
}

// 批量消息异步发送请求
type AsyncBatchSendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncBatchSendRequest) Reset() {
	*x = AsyncBatchSendRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncBatchSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncBatchSendRequest) ProtoMessage() {}

func (x *AsyncBatchSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncBatchSendRequest.ProtoReflect.Descriptor instead.
func (*AsyncBatchSendRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{14}
}

func (x *AsyncBatchSendRequest) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// 批量消息异步发送响应
type AsyncBatchSendResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NotificationIds []uint64               `protobuf:"varint,1,rep,packed,name=notification_ids,json=notificationIds,proto3" json:"notification_ids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AsyncBatchSendResponse) Reset() {
	*x = AsyncBatchSendResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncBatchSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncBatchSendResponse) ProtoMessage() {}

func (x *AsyncBatchSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncBatchSendResponse.ProtoReflect.Descriptor instead.
func (*AsyncBatchSendResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{15}
}

func (x *AsyncBatchSendResponse) GetNotificationIds() []uint64 {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

var File_notification_v1_notification_proto protoreflect.FileDescriptor

const file_notification_v1_notification_proto_rawDesc = "" +
	"\n" +
	"\"notification/v1/notification.proto\x12\x0fnotification.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf0\x02\n" +
	"\fSendStrategy\x12D\n" +
	"\timmediate\x18\x01 \x01(\v2$.notification.v1.ImmediatelyStrategyH\x00R\timmediate\x12<\n" +
	"\adelayed\x18\x02 \x01(\v2 .notification.v1.DelayedStrategyH\x00R\adelayed\x12B\n" +
	"\tscheduled\x18\x03 \x01(\v2\".notification.v1.ScheduledStrategyH\x00R\tscheduled\x12F\n" +
	"\vtime_window\x18\x04 \x01(\v2#.notification.v1.TimeWindowStrategyH\x00R\n" +
	"timeWindow\x12?\n" +
	"\bdeadline\x18\x05 \x01(\v2!.notification.v1.DeadlineStrategyH\x00R\bdeadlineB\x0f\n" +
	"\rstrategy_type\"\x15\n" +
	"\x13ImmediatelyStrategy\"6\n" +
	"\x0fDelayedStrategy\x12#\n" +
	"\rdelay_seconds\x18\x01 \x01(\x03R\fdelaySeconds\"L\n" +
	"\x11ScheduledStrategy\x127\n" +
	"\tsend_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bsendTime\"h\n" +
	"\x12TimeWindowStrategy\x12*\n" +
	"\x11start_time_millis\x18\x01 \x01(\x03R\x0fstartTimeMillis\x12&\n" +
	"\x0fend_time_millis\x18\x02 \x01(\x03R\rendTimeMillis\"J\n" +
	"\x10DeadlineStrategy\x126\n" +
	"\bdeadline\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bdeadline\"\xd8\x02\n" +
	"\fNotification\x12\x19\n" +
	"\bbiz_code\x18\x01 \x01(\tR\abizCode\x12\x1c\n" +
	"\treceivers\x18\x02 \x03(\tR\treceivers\x122\n" +
	"\achannel\x18\x03 \x01(\x0e2\x18.notification.v1.ChannelR\achannel\x12\x15\n" +
	"\x06tpl_id\x18\x04 \x01(\tR\x05tplId\x12K\n" +
	"\n" +
	"tpl_params\x18\x05 \x03(\v2,.notification.v1.Notification.TplParamsEntryR\ttplParams\x129\n" +
	"\bstrategy\x18\x06 \x01(\v2\x1d.notification.v1.SendStrategyR\bstrategy\x1a<\n" +
	"\x0eTplParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb8\x01\n" +
	"\n" +
	"SendResult\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\x04R\x0enotificationId\x123\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1b.notification.v1.SendStatusR\x06status\x123\n" +
	"\berr_code\x18\x03 \x01(\x0e2\x18.notification.v1.ErrCodeR\aerrCode\x12\x17\n" +
	"\aerr_msg\x18\x04 \x01(\tR\x06errMsg\"P\n" +
	"\vSendRequest\x12A\n" +
	"\fnotification\x18\x01 \x01(\v2\x1d.notification.v1.NotificationR\fnotification\"C\n" +
	"\fSendResponse\x123\n" +
	"\x06result\x18\x01 \x01(\v2\x1b.notification.v1.SendResultR\x06result\"U\n" +
	"\x10AsyncSendRequest\x12A\n" +
	"\fnotification\x18\x01 \x01(\v2\x1d.notification.v1.NotificationR\fnotification\"H\n" +
	"\x11AsyncSendResponse\x123\n" +
	"\x06result\x18\x01 \x01(\v2\x1b.notification.v1.SendResultR\x06result\"W\n" +
	"\x10BatchSendRequest\x12C\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1d.notification.v1.NotificationR\rnotifications\"\x88\x01\n" +
	"\x11BatchSendResponse\x125\n" +
	"\aresults\x18\x01 \x03(\v2\x1b.notification.v1.SendResultR\aresults\x12\x1b\n" +
	"\ttotal_cnt\x18\x02 \x01(\x05R\btotalCnt\x12\x1f\n" +
	"\vsuccess_cnt\x18\x03 \x01(\x05R\n" +
	"successCnt\"\\\n" +
	"\x15AsyncBatchSendRequest\x12C\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1d.notification.v1.NotificationR\rnotifications\"C\n" +
	"\x16AsyncBatchSendResponse\x12)\n" +
	"\x10notification_ids\x18\x01 \x03(\x04R\x0fnotificationIds*6\n" +
	"\aChannel\x12\x17\n" +
	"\x13CHANNEL_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03SMS\x10\x01\x12\t\n" +
	"\x05EMAIL\x10\x02*f\n" +
	"\n" +
	"SendStatus\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aPREPARE\x10\x01\x12\f\n" +
	"\bCANCELED\x10\x02\x12\v\n" +
	"\aPENDING\x10\x03\x12\v\n" +
	"\aSUCCESS\x10\x04\x12\v\n" +
	"\aFAILURE\x10\x05*\x93\x03\n" +
	"\aErrCode\x12\x13\n" +
	"\x0fERR_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rINVALID_PARAM\x10\x01\x12\x10\n" +
	"\fRATE_LIMITED\x10\x02\x12\x18\n" +
	"\x14NO_AVAILABLE_CHANNEL\x10\x03\x12\x19\n" +
	"\x15NO_AVAILABLE_PROVIDER\x10\x04\x12\x15\n" +
	"\x11CHANNEL_NOT_FOUND\x10\x05\x12\x16\n" +
	"\x12PROVIDER_NOT_FOUND\x10\x06\x12\x16\n" +
	"\x12TEMPLATE_NOT_FOUND\x10\a\x12\x14\n" +
	"\x10BIZ_ID_NOT_FOUND\x10\b\x12\x14\n" +
	"\x10CONFIG_NOT_FOUND\x10\t\x12\x1a\n" +
	"\x16QUOTA_CONFIG_NOT_FOUND\x10\n" +
	"\x12\x1a\n" +
	"\x16QUOTA_RECORD_NOT_FOUND\x10\v\x12\x1a\n" +
	"\x16NOTIFICATION_NOT_FOUND\x10\f\x12\x1e\n" +
	"\x1aCREATE_NOTIFICATION_FAILED\x10\r\x12\x1c\n" +
	"\x18SEND_NOTIFICATION_FAILED\x10\x0e\x12\x14\n" +
	"\x10QUOTA_NOT_ENOUGH\x10\x0f2\xe5\x02\n" +
	"\x13NotificationService\x12C\n" +
	"\x04Send\x12\x1c.notification.v1.SendRequest\x1a\x1d.notification.v1.SendResponse\x12R\n" +
	"\tAsyncSend\x12!.notification.v1.AsyncSendRequest\x1a\".notification.v1.AsyncSendResponse\x12R\n" +
	"\tBatchSend\x12!.notification.v1.BatchSendRequest\x1a\".notification.v1.BatchSendResponse\x12a\n" +
	"\x0eAsyncBatchSend\x12&.notification.v1.AsyncBatchSendRequest\x1a'.notification.v1.AsyncBatchSendResponseB\xc7\x01\n" +
	"\x13com.notification.v1B\x11NotificationProtoP\x01Z@github.com/JrMarcco/kuryr-api/api/notification/v1;notificationv1\xa2\x02\x03NXX\xaa\x02\x0fNotification.V1\xca\x02\x0fNotification\\V1\xe2\x02\x1bNotification\\V1\\GPBMetadata\xea\x02\x10Notification::V1b\x06proto3"

var (
	file_notification_v1_notification_proto_rawDescOnce sync.Once
	file_notification_v1_notification_proto_rawDescData []byte
)

func file_notification_v1_notification_proto_rawDescGZIP() []byte {
	file_notification_v1_notification_proto_rawDescOnce.Do(func() {
		file_notification_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)))
	})
	return file_notification_v1_notification_proto_rawDescData
}

var file_notification_v1_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_notification_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_notification_v1_notification_proto_goTypes = []any{
	(Channel)(0),                   // 0: notification.v1.Channel
	(SendStatus)(0),                // 1: notification.v1.SendStatus
	(ErrCode)(0),                   // 2: notification.v1.ErrCode
	(*SendStrategy)(nil),           // 3: notification.v1.SendStrategy
	(*ImmediatelyStrategy)(nil),    // 4: notification.v1.ImmediatelyStrategy
	(*DelayedStrategy)(nil),        // 5: notification.v1.DelayedStrategy
	(*ScheduledStrategy)(nil),      // 6: notification.v1.ScheduledStrategy
	(*TimeWindowStrategy)(nil),     // 7: notification.v1.TimeWindowStrategy
	(*DeadlineStrategy)(nil),       // 8: notification.v1.DeadlineStrategy
	(*Notification)(nil),           // 9: notification.v1.Notification
	(*SendResult)(nil),             // 10: notification.v1.SendResult
	(*SendRequest)(nil),            // 11: notification.v1.SendRequest
	(*SendResponse)(nil),           // 12: notification.v1.SendResponse
	(*AsyncSendRequest)(nil),       // 13: notification.v1.AsyncSendRequest
	(*AsyncSendResponse)(nil),      // 14: notification.v1.AsyncSendResponse
	(*BatchSendRequest)(nil),       // 15: notification.v1.BatchSendRequest
	(*BatchSendResponse)(nil),      // 16: notification.v1.BatchSendResponse
	(*AsyncBatchSendRequest)(nil),  // 17: notification.v1.AsyncBatchSendRequest
	(*AsyncBatchSendResponse)(nil), // 18: notification.v1.AsyncBatchSendResponse
	nil,                            // 19: notification.v1.Notification.TplParamsEntry
	(*timestamppb.Timestamp)(nil),  // 20: google.protobuf.Timestamp
}
var file_notification_v1_notification_proto_depIdxs = []int32{
	4,  // 0: notification.v1.SendStrategy.immediate:type_name -> notification.v1.ImmediatelyStrategy
	5,  // 1: notification.v1.SendStrategy.delayed:type_name -> notification.v1.DelayedStrategy
	6,  // 2: notification.v1.SendStrategy.scheduled:type_name -> notification.v1.ScheduledStrategy
	7,  // 3: notification.v1.SendStrategy.time_window:type_name -> notification.v1.TimeWindowStrategy
	8,  // 4: notification.v1.SendStrategy.deadline:type_name -> notification.v1.DeadlineStrategy
	20, // 5: notification.v1.ScheduledStrategy.send_time:type_name -> google.protobuf.Timestamp
	20, // 6: notification.v1.DeadlineStrategy.deadline:type_name -> google.protobuf.Timestamp
	0,  // 7: notification.v1.Notification.channel:type_name -> notification.v1.Channel
	19, // 8: notification.v1.Notification.tpl_params:type_name -> notification.v1.Notification.TplParamsEntry
	3,  // 9: notification.v1.Notification.strategy:type_name -> notification.v1.SendStrategy
	1,  // 10: notification.v1.SendResult.status:type_name -> notification.v1.SendStatus
	2,  // 11: notification.v1.SendResult.err_code:type_name -> notification.v1.ErrCode
	9,  // 12: notification.v1.SendRequest.notification:type_name -> notification.v1.Notification
	10, // 13: notification.v1.SendResponse.result:type_name -> notification.v1.SendResult
	9,  // 14: notification.v1.AsyncSendRequest.notification:type_name -> notification.v1.Notification
	10, // 15: notification.v1.AsyncSendResponse.result:type_name -> notification.v1.SendResult
	9,  // 16: notification.v1.BatchSendRequest.notifications:type_name -> notification.v1.Notification
	10, // 17: notification.v1.BatchSendResponse.results:type_name -> notification.v1.SendResult
	9,  // 18: notification.v1.AsyncBatchSendRequest.notifications:type_name -> notification.v1.Notification
	11, // 19: notification.v1.NotificationService.Send:input_type -> notification.v1.SendRequest
	13, // 20: notification.v1.NotificationService.AsyncSend:input_type -> notification.v1.AsyncSendRequest
	15, // 21: notification.v1.NotificationService.BatchSend:input_type -> notification.v1.BatchSendRequest
	17, // 22: notification.v1.NotificationService.AsyncBatchSend:input_type -> notification.v1.AsyncBatchSendRequest
	12, // 23: notification.v1.NotificationService.Send:output_type -> notification.v1.SendResponse
	14, // 24: notification.v1.NotificationService.AsyncSend:output_type -> notification.v1.AsyncSendResponse
	16, // 25: notification.v1.NotificationService.BatchSend:output_type -> notification.v1.BatchSendResponse
	18, // 26: notification.v1.NotificationService.AsyncBatchSend:output_type -> notification.v1.AsyncBatchSendResponse
	23, // [23:27] is the sub-list for method output_type
	19, // [19:23] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_notification_v1_notification_proto_init() }
func file_notification_v1_notification_proto_init() {
	if File_notification_v1_notification_proto != nil {
		return
	}
	file_notification_v1_notification_proto_msgTypes[0].OneofWrappers = []any{
		(*SendStrategy_Immediate)(nil),
		(*SendStrategy_Delayed)(nil),
		(*SendStrategy_Scheduled)(nil),
		(*SendStrategy_TimeWindow)(nil),
		(*SendStrategy_Deadline)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_v1_notification_proto_goTypes,
		DependencyIndexes: file_notification_v1_notification_proto_depIdxs,
		EnumInfos:         file_notification_v1_notification_proto_enumTypes,
		MessageInfos:      file_notification_v1_notification_proto_msgTypes,
	}.Build()
	File_notification_v1_notification_proto = out.File
	file_notification_v1_notification_proto_goTypes = nil
	file_notification_v1_notification_proto_depIdxs = nil
}
